#!/usr/bin/env bash

TARGET_BRANCH=master

#
git checkout ${TARGET_BRANCH} 

git remote add core https://github.com/o3co/query.core.git
git remote add extension.cql https://github.com/o3co/query.extension.cql.git
git remote add extension.http https://github.com/o3co/query.extension.http.git
git remote add extension.extra https://github.com/o3co/query.extension.extra.git

git remote add bridge.doctrine_orm https://github.com/o3co/query.bridge.doctrine_orm.git

git remote add adapter.doctrine_orm https://github.com/o3co/query.adapter.doctrine.git


git fetch --all
if [ $? -ne 0 ]; then
    printf Failed to fetch from remote 
    exit 1
fi


git checkout ${TARGET_BRANCH} 

printf "============================================================"
# 
git checkout refs/remotes/core/${TARGET_BRANCH}
git filter-branch -f --subdirectory-filter lib ${TARGET_BRANCH} 
git merge ${TARGET_BRANCH} -m "Merge branch 'master' into HEAD"
if [ $? -ne 0 ]; then
    printf -e "\e[31mFailed to merge package 'core'.\e[m\n"
    printf "please execute following command to restore.\n"
    printf "\tgit checkout ${TARGET_BRANCH}\n"
    printf "\tgit reset --hard refs/original/refs/heads/${TARGET_BRANCH}\n"
    exit 1
fi
git push core HEAD:${TARGET_BRANCH}
# reset the master
git checkout ${TARGET_BRANCH}
git reset --hard refs/original/refs/heads/${TARGET_BRANCH}


# Extension Http
git checkout refs/remotes/extension.http/${TARGET_BRANCH}
git filter-branch -f --subdirectory-filter extensions/Http ${TARGET_BRANCH} 
git merge ${TARGET_BRANCH} -m "Merge branch 'master' into HEAD"
if [ $? -ne 0 ]; then
    printf -e "\e[31mFailed to merge package 'extension.http'.\e[m\n"
    printf "please execute following command to restore.\n"
    printf "\tgit checkout ${TARGET_BRANCH}\n"
    printf "\tgit reset --hard refs/original/refs/heads/${TARGET_BRANCH}\n"
    exit 1
fi
git push extension.http HEAD:${TARGET_BRANCH}
# reset the master
git checkout ${TARGET_BRANCH}
git reset --hard refs/original/refs/heads/${TARGET_BRANCH}

# Extension CQL
git checkout refs/remotes/extension.cql/${TARGET_BRANCH}
git filter-branch -f --subdirectory-filter extensions/CQL ${TARGET_BRANCH} 
git merge ${TARGET_BRANCH} -m "Merge branch 'master' into HEAD"
if [ $? -ne 0 ]; then
    printf -e "\e[31mFailed to merge package 'extensino.cql'.\e[m\n"
    printf "please execute following command to restore.\n"
    printf "\tgit checkout ${TARGET_BRANCH}\n"
    printf "\tgit reset --hard refs/original/refs/heads/${TARGET_BRANCH}\n"
    exit 1
fi
git push extension.cql HEAD:${TARGET_BRANCH}
# reset the master
git checkout ${TARGET_BRANCH}
git reset --hard refs/original/refs/heads/${TARGET_BRANCH}

# Extension Extra
git checkout refs/remotes/extension.extra/${TARGET_BRANCH}
git filter-branch -f --subdirectory-filter extensions/Extra ${TARGET_BRANCH} 
git merge ${TARGET_BRANCH} -m "Merge branch 'master' into HEAD"
if [ $? -ne 0 ]; then
    printf -e "\e[31mFailed to merge package 'extension.extra'.\e[m\n"
    printf "please execute following command to restore.\n"
    printf "\tgit checkout ${TARGET_BRANCH}\n"
    printf "\tgit reset --hard refs/original/refs/heads/${TARGET_BRANCH}\n"
    exit 1
fi
git push extension.extra HEAD:${TARGET_BRANCH}
# reset the master
git checkout ${TARGET_BRANCH}
git reset --hard refs/original/refs/heads/${TARGET_BRANCH}

# Bridge DoctrineORM 
git checkout refs/remotes/bridge.doctrine_orm/${TARGET_BRANCH}
git filter-branch -f --subdirectory-filter bridges/DoctrineOrm ${TARGET_BRANCH} 
git merge ${TARGET_BRANCH} -m "Merge branch 'master' into HEAD"
if [ $? -ne 0 ]; then
    printf -e "\e[31mFailed to merge package 'bridge.doctrine_orm'.\e[m\n"
    printf "please execute following command to restore.\n"
    printf "\tgit checkout ${TARGET_BRANCH}\n"
    printf "\tgit reset --hard refs/original/refs/heads/${TARGET_BRANCH}\n"
    exit 1
fi
git push bridge.doctrine_orm HEAD:${TARGET_BRANCH}
# reset the master
git checkout ${TARGET_BRANCH}
git reset --hard refs/original/refs/heads/${TARGET_BRANCH}

# Adapter Doctrine 
git checkout refs/remotes/adapter.doctrine/${TARGET_BRANCH}
git filter-branch -f --subdirectory-filter adapters/DoctrineExtension ${TARGET_BRANCH} 
git merge ${TARGET_BRANCH} -m "Merge branch 'master' into HEAD"
if [ $? -ne 0 ]; then
    printf -e "\e[31mFailed to merge package 'adapter.doctrine'.\e[m\n"
    printf "please execute following command to restore.\n"
    printf "\tgit checkout ${TARGET_BRANCH}\n"
    printf "\tgit reset --hard refs/original/refs/heads/${TARGET_BRANCH}\n"
    exit 1
fi
git push adapter.doctrine HEAD:${TARGET_BRANCH}
# reset the master
git checkout ${TARGET_BRANCH}
git reset --hard refs/original/refs/heads/${TARGET_BRANCH}

printf "============================================================"
printf "COMPLETE"
